---
//ts-nocheck

import { apiDetails } from "../settings";
import ProductCard from "../components/ProductsCard.astro";
import MainLayout from "../layouts/MainLayout.astro";
import { Image } from 'astro:assets';
import Button from '../components/Button.astro';
import Link from '../components/Link.astro';

const res = await fetch(`${apiDetails.supabaseUrl}/rest/v1/products?tags=eq.drikkevarer`, {
  headers: {
    apikey: apiDetails.supabaseAnonKey,
    Authorization: `Bearer ${apiDetails.supabaseAnonKey}`,
  },
});

const data = await res.json();
console.log("Supabase URL:", apiDetails.supabaseUrl);
console.log("Supabase anonKey:", apiDetails.supabaseAnonKey);

---

<MainLayout>

<div class="product-page">
    <article class="product">
        <!-- Sticky section containing image gallery -->
        <div class="product-media i-sticky md:px-0 px-10">
            <div class="dummy--gallery grid grid-cols-2 md:grid-rows-3 justify-stretch h-[300px] md:h-[700px] lg:w-[450px] ml-2 mb-none md:mb-2">
                <div class=" bg-green-100 shadow-short mt-ml mb-xs md:mb-ml pt-none md:pt-lg rounded-r-none md:rounded-r-3xl h-[240px] w-screen md:h-[550px] md:w-9xl flex flex-col items-center justify-end md:justify-center">
                    <nav class="md:flex flex-col items-center justify-center gap-s hidden" >
            <Button variant="primary" size="medium" href="/madvarer-listeview">madvarer</Button>
            <Button variant="primary" size="medium" href="/drikkevarer-listeview">drikkevarer</Button>
            <Button variant="primary" size="medium" href="/ting-listeview">Ting & sager</Button>
        </nav>
        <div class="md:flex flex-col hidden text-right p-s gap-xxs">
            <div >
            <label class="pr-xxs" for="Glutenfri"> Glutenfri</label>
             <input class="border-white rounded-sm focus:ring-green-500 dark:focus:ring-green-600 text-red-700" type="checkbox" id="glutenfri" name="glutenfri" value="Glutenfri">
             </div>
             <div>
             <label class="pr-xxs" for="Alkoholfri"> Alkoholfri</label>
             <input class="border-white rounded-sm focus:ring-green-500 dark:focus:ring-green-600 text-red-700" type="checkbox" id="alkoholfri" name="alkoholfri" value="Alkoholfri">
        </div>
            </div>
        <nav class="flex flex-wrap items-center justify-center gap-s pb-sm p-4 md:hidden" >
            <Button variant="primary" size="small" href="/madvarer-listeview">madvarer</Button>
            <Button variant="primary" size="small" href="/drikkevarer-listeview">drikkevarer</Button>
            <Button variant="primary" size="small" href="/ting-listeview">Ting & sager</Button>
        </nav>
        <div class="flex md:hidden flex-row gap-sm pb-xs">
            <div >
            <label class="pr-xxs" for="Glutenfri"> Glutenfri</label>
             <input class="border-white rounded-sm focus:ring-green-500 dark:focus:ring-green-600 text-red-700" type="checkbox" id="glutenfri" name="glutenfri" value="Glutenfri">
             </div>
             <div>
             <label class="pr-xxs" for="Alkoholfri"> Alkoholfri</label>
             <input class="border-white rounded-sm focus:ring-green-500 dark:focus:ring-green-600 text-red-700" type="checkbox" id="alkoholfri" name="alkoholfri" value="Alkoholfri">
        </div>
            </div>
                </div>
            </div>
        </div>
      
        <div class="product-detail">
            <div class="flex flex-col ml-auto pt-none md:pt-6xl">
                 <div class="flex flex-wrap md:gap-s justify-evenly">
  {data.map((product) => <ProductCard {product} /> )}
            </div>
        </div>
    </article>
</div>
	</article>
</MainLayout>

<style>
	html, body {
    margin: 0;
    padding: 0;
    scroll-behavior: smooth;
}

* {
    box-sizing: border-box;
}

/** Dummy content **/
.dummy {
    text-align: center;
    padding: 1em 0;
    margin: 16px 8px;
    border-radius: 4px;
    min-height: 80px;
}

.dummy__gallery-thumbs {
    display: flex;
    list-style: none;
    justify-content: space-between;
    padding: 0;
    background: transparent;
    min-height: 80px;
}

.dummy--gallery {
    min-height: 400px;
}

.product-detail .dummy {
    min-height: 240px;
}
.product-detail-2 .dummy {
    min-height: 240px;
}
.product {
    position: relative;
}

.product::after {
    display: table;
    width: 100%;
    height: 1px;
    content: '';
    clear: both;
}

@media screen and (min-width: 768px) {
    .product-media {
        float: left;
        width: 35%;
    }

    .product-detail-2 {
        width: 65%;
        float: right;
    }
}

@media screen and (min-width: 768px) {

    .is-sticky {
        position: fixed;
        top: 0;
    }

    .is-sticky-bottom {
        position: absolute;
        bottom: 0;
    }
}

@supports (position: sticky) or (position: -webkit-sticky) {
    @media screen and (min-width: 768px) {
        .product-media {
            position: -webkit-sticky;
            position: -moz-sticky;
            position: -o-sticky;
            position: -ms-sticky;
            position: sticky;
            top: 0;
        }
    }
}


</style>
<script>
	function supportsSticky() {
    try {
        return (
            CSS.supports("position", "sticky") ||
            CSS.supports("position", "-webkit-sticky")
        );

    } catch(e) {
        return false;
    }
}

function stickyStick(container, target) {

    var cPos = container.getBoundingClientRect();
    var tPos = target.getBoundingClientRect();
    var atBottom = (cPos.bottom  <= tPos.height);
    var isSticky = (cPos.top < 1 && ! atBottom);

    if(isSticky) {
        sticky.classList.add('is-sticky');
    } else {
        sticky.classList.remove('is-sticky');
    }

    if(atBottom) {
        sticky.classList.add('is-sticky-bottom');
    } else {
        sticky.classList.remove('is-sticky-bottom');
    }
}

if(! supportsSticky()) {
   var sticky = document.querySelector('.i-sticky');
    var container = sticky.parentNode;
 window.addEventListener('scroll',function() {
        stickyStick(container, sticky);
    });
}
</script>

